# Дополнительное практическое задание по модулю: "Основные операторы"
# Вводим число от 3 до 20
n = int(input("Введите число от 3 до 20: "))

# создаем функцию  генерации пароля для числа n (Вариант с цикл While)
def PasswordWhile(n):
    if n < 3 or n > 20: # Задаем условие, что если n не в пределах 3-20, то
        return "Число должно быть от 3 до 20 включительно." # возвращаем функцию текстом

    result = "" # создаем пустую строку для хранения результата

    i = 1 # Начальное значение для первого числа в паре
    while i < n: # Внешний цикл для первого числа пары
        j = i + 1 # Внутренний цикл для второго числа пары
        while j <= n:
            if n % (i + j) == 0: # Проверяем, делится n на сумму текущей пары (i + j) без остатка
                result = result + str(i) + str(j) # Если делится, добавляем текущую пару к результату
            j = j + 1 # Увеличиваем второе число пары
        i = i + 1 # Увеличиваем первое число пары

    return result # Возвращаем результат в виде строки

print(f"Пароль: {PasswordWhile(n)}")


# создаем функцию генерации пароля для числа n (Вариант с цикл For)
def PasswordFor(n):
    if n < 3 or n > 20: # Задаем условие, что если n не в пределах 3-20, то
        return "Число должно быть от 3 до 20 включительно." # возвращаем функцию текстом

    result = "" # создаем пустую строку для хранения результата
    for i in range(1, n):  # Внешний цикл для первого числа в паре
        for j in range(i + 1, n + 1):   # Внутренний цикл для второго числа в паре (i+1 т.к. j должно быть > i)
                                        # n + 1 чтобы добавить n в диапазон т.к. range(start, stop)
            if n % (i + j) == 0:    # Проверяем, делится n на сумму текущей пары (i + j) без остатка
                result = result + str(i) + str(j) # Если делится, добавляем текущую пару к результату

    return result

print(f"Пароль: {PasswordFor(n)}")

# В начале строки используется буква f, чтобы указать, что строка будет форматированной.
# {password(n)} — вызов функции password(n), который вставляет результат работы функции прямо в строку,
# т.е.результат расчета пароля для введенного числа n

# Примечание к решению:
# Каждая пара чисел должна быть уникальной и не повторяться в обратном порядке.
# Например, если пара (1, 2) уже обработана, то пара (2, 1) не нужна.
# Чтобы избежать таких дублирующих пар, второе число j всегда должно быть больше первого числа i.